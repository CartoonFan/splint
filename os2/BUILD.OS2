Building lclint:
----------------

This file is originally part of the binary distribution of lclint for OS/2.

For building lclint for OS/2 you need the complete "original" source
package (available e.g. via Dave Evans' lclint homepage) and maybe 
some more recent patches for the OS/2 version. The LCLint home page
is at:

  http://lclint.cs.virginia.edu/

My fixes can be found at:

  http://www.fh-wedel.de/pub/fh-wedel/staff/di/lclint/index.html

Edit the makefile "Makefile.os2" and the compile batch "makeos2.cmd" 
in the "lclint-?.?\os2" directory. During make execution all important 
settings will be written to a config file read by any sub makefile. In
any case you will have to set the variable `$BASEDIR' in Makefile.os2 
and `%base%' in makeos2.cmd according to your setup.

Then use the batch file makeos2.cmd from inside the os2/ directory
to build lclint. The options to that batch file are:

  makeos2 [--emx|-e|--gcc|-g|--icc|-i|--oldconf|-o|--test|-t|--package|-p]

Like with make, this batch should be called from inside the os2
directory. The options starting with "e" build LCLint using emx/gcc with 
debug code. The letter "g" stands for gcc using the OMF object format 
and optimization rather than debug code. For IBMs icc compiler use "i".
Each of the above options will create a new configuration. To continue
a build with an existing configuration use "o". Finally "t" runs the
"quicktest" part of the test suite (other tests are not yet supported).

Please, be aware that you need the flex library in order to build lclint.
As far as I remember the OS/2 version of flex comes with this library for
the emx/gcc compiler. If not, you will easily be able to compile it 
following the instructions from flex'es README.OS2 file.

If you want to use IBM's compiler, you will probably not find the lib
as easily as the whole flex package has so far only been ported for 
emx/gcc. However you can compile the lib with IBM's compiler, too. To
do this, you will have to get the flex sources from one of the usual 
ftp sites and compile at least the library. 

To compile the flex library using IBM's VisualAge C++ compiler, you only
need to perform the following steps:

- enter the flex source directory.
- enter "icc -c -Q -O libmain.c" and "icc -c -Q -O libyywrap.c"
- enter "ilib fl.lib" from the command line (the library must not exist)
  and "y", "+libmain.obj+libyywrap.obj" and "<enter>" from the ilib prompt.
- copy fl.lib somewhere where it gets found, I suggest "ibmcpp\lib".

When using emx/gcc you can either produce code using the OMF object format
or use a.out. The latter has the consequence of needing emx.dll to run the 
binary and under certain circumstances being able to run it under DOS using 
emx.exe or rsx.exe as DOS extender (you may want to replace the "-g" switch
by "-O3" in the compiler settings for optimization rather than debug code)
in such a case. 

To create such a binary override the default settings in the makefile by 
invoking the following little batch (the default settings for using the 
a.out format defined in Makefile.os2 do *not* produce an executable that 
runs under DOS):

    @echo off
    if exist bin\lclint del bin\lclint
    make all -f makefile.os2 "COMPILER=gcc-emx" "CC=gcc -O3" "E="
    if errorlevel 1 goto end
    cd bin
    echo on
    emxbind lclint -p
    @echo off
    cd ..
    :end

Please be aware that for debugging purposes the a.out format is the best 
choice. I did not succeed in debugging any single step of lclint using 
ipmd as it crashed each time I tried to load the lclint executable.

The Makefile.os2 is currently configured to use flex and bison to generate 
some source files. If you do not have these tools on your system you should 
change the corresponding section to use the .der files shipping with the 
lclint sources.

Herbert in September 2001

