
macros.c: (in macro needparen)
macros.c:7:26: Macro parameter used without parentheses: a
macros.c:7:30: Macro parameter used without parentheses: b
macros.c: (in macro needuse)
macros.c:8:21: Macro parameter b not used
   macros.lcl:6:1: Specification of b
macros.c: (in macro multuse)
macros.c:9:18: Macro parameter a used more than once
macros.c: (in macro badassign)
macros.c:10:26: Assignment to macro parameter: a
macros.c:11: Macro badassign already defined
   macros.c:10: Previous definition of badassign
macros.c: (in macro badassign)
macros.c:11:26: Operand of ++ is macro parameter (non-functional): (a)++
macros.c:11:35: Operand of ++ is macro parameter (non-functional): ++(b)
macros.c: (in macro predbad)
macros.c:15:20: Macro parameter b used in true clause, but not in false clause
macros.c: (in macro predbad2)
macros.c:16:19: Macro parameter a used more than once
macros.c:16:22: Macro parameter b used more than once
macros.c: (in macro badval)
macros.c:22:23: Function badval specified to return int, implemented as macro
                   having type bool: ((a) == (b))
   macros.lcl:14: Specification of badval
macros.c: (in macro badconst)
macros.c:23:20: Constant badconst specified as bool, but defined as int: 5
   macros.lcl:18:15: Specification of badconst
macros.c:25:21: Constant worseconst implemented as parameterized macro
   macros.lcl:20:14: Specification of worseconst
*** Segmentation Violation
*** Location (not trusted): macros.c:25:21
*** Last code point: exprNode.c:9344
*** Previous code point: exprNode.c:9344
*** Please report bug to lclint-bug@cs.virginia.edu
