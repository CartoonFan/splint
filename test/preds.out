gmake[3]: Entering directory `/tmp/LCLintDev/test'

Cannot find standard library: ansi.lcd
     Check LARCH_PATH environment variable.
preds.c: (in function f)
preds.c:10:7: Test expression for if not bool, type int: *p
  Test expression type is not boolean or int. (-predboolint will suppress
  message)
preds.c:15:8: Operand of ! is non-boolean (int): !(*p)
  The operand of a boolean operator is not a boolean. Use +ptrnegate to allow !
  to be used on pointers. (-boolops will suppress message)
preds.c:20:7: Test expression for if is assignment expression: b1 = b2
  The condition test is an assignment expression. Probably, you mean to use ==
  instead of =. If an assignment is intended, add an extra parentheses nesting
  (e.g., if ((a = b)) ...) to suppress this message. (-predassign will suppress
  message)
preds.c:25:7: Test expression for if not bool, type char: (c = 'a')
  Test expression type is not boolean. (-predboolothers will suppress message)
preds.c:30:7: Use of == with bool variables (risks inconsistency because of
                 multiple true values): b1 == b2
  Two bool values are compared directly using a C primitive. This may produce
  unexpected results since all non-zero values are considered TRUE, so
  different TRUE values may not be equal. The file bool.h (included in
  lclint/lib) provides bool_equal for safe bool comparisons. (-boolcompare will
  suppress message)
preds.c:35:7: Test expression for if not bool, type char: c

Finished LCLint checking --- 6 code errors found, as expected

Cannot find standard library: ansi.lcd
     Check LARCH_PATH environment variable.
preds.c: (in function f)
preds.c:20:7: Test expression for if is assignment expression: b1 = b2
  The condition test is an assignment expression. Probably, you mean to use ==
  instead of =. If an assignment is intended, add an extra parentheses nesting
  (e.g., if ((a = b)) ...) to suppress this message. (-predassign will suppress
  message)

Finished LCLint checking --- 1 code error found, as expected

Cannot find standard library: ansi.lcd
     Check LARCH_PATH environment variable.
bool.h:11:25: Constant exported, but not specified: FALSE
  A constant is exported, but not specified. (-exportconst will suppress
  message)
bool.h:16:25: Constant exported, but not specified: TRUE
preds.c: (in function f)
preds.c:5:8: Operand of ! is non-boolean (int *): !p
  The operand of ! operator is a pointer. (+ptrnegate will suppress message)
preds.c:10:7: Test expression for if not bool, type int: *p
  Test expression type is not boolean or int. (-predboolint will suppress
  message)
preds.c:15:8: Operand of ! is non-boolean (int): !(*p)
  The operand of a boolean operator is not a boolean. Use +ptrnegate to allow !
  to be used on pointers. (-boolops will suppress message)
preds.c:20:7: Test expression for if is assignment expression: b1 = b2
  The condition test is an assignment expression. Probably, you mean to use ==
  instead of =. If an assignment is intended, add an extra parentheses nesting
  (e.g., if ((a = b)) ...) to suppress this message. (-predassign will suppress
  message)
preds.c:25:7: Test expression for if not bool, type char: (c = 'a')
  Test expression type is not boolean. (-predboolothers will suppress message)
preds.c:30:7: Use of == with bool variables (risks inconsistency because of
                 multiple true values): b1 == b2
  Two bool values are compared directly using a C primitive. This may produce
  unexpected results since all non-zero values are considered TRUE, so
  different TRUE values may not be equal. The file bool.h (included in
  lclint/lib) provides bool_equal for safe bool comparisons. (-boolcompare will
  suppress message)
preds.c:35:7: Test expression for if not bool, type char: c
bool.h:21:13: Function bool_initMod declared but not used
  A function is declared but not used. Use /*@unused@*/ in front of function
  header to suppress message. (-fcnuse will suppress message)
bool.h:24:29: Function bool_unparse declared but not used
bool.h:27:13: Function bool_not declared but not used
bool.h:30:13: Function bool_equal declared but not used
preds.c:3:5: Function f declared but not used
   preds.c:41:1: Definition of f

Finished LCLint checking --- 14 code errors found, expected 12
gmake[3]: *** [preds] Error 1
gmake[3]: Leaving directory `/tmp/LCLintDev/test'
